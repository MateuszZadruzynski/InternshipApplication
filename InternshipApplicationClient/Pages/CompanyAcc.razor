@page "/company/profile"

@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject NavigationManager navigationManager
@inject IJSRuntime Runtime
@inject CompanyInterface companyInterface
@inject CompanyImageInterface companyImageInterface 
@inject UploadInterface uploadInterface
@using System.IO 


<div class="div-form">
    <h2>Profil firmy:</h2>
    <EditForm Model="CompanyData" OnValidSubmit="EditStudent">
        <DataAnnotationsValidator />
        <div class="row">
            <div class="col">
                <div class="row d-flex flex-column align-items-center">
                    <div class="col-sm pb-1">
                        <div class="form-group">
                            <label class="d-block">Nazwa firmy:</label>
                            <InputText placeholder="Name" @bind-Value="CompanyData.name" />
                            <ValidationMessage For="()=>CompanyData.name"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">NIP:</label>
                            <InputText placeholder="1111111111" @bind-Value="CompanyData.nip" />
                            <ValidationMessage For="()=>CompanyData.nip"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <InputText placeholder="E-mail" hidden @bind-Value="CompanyData.email" />
                            <ValidationMessage For="()=>CompanyData.email"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Hasło:</label>
                            <InputText type="password" placeholder="Hasło..." @bind-Value="CompanyData.Password" />
                            <ValidationMessage For="()=>CompanyData.Password"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Potwierdź hasło:</label>
                            <InputText type="password" placeholder="Powtórz hasło..." @bind-Value="CompanyData.ConfirmPassword" />
                            <ValidationMessage For="()=>CompanyData.ConfirmPassword"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Dodawanie zdjęcia firmy:</label>
                            <ImageUpload OnChange="AssignImageUrl" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="col">
                <div class="row d-flex flex-column align-items-center">
                    <div class="col-sm">
                        <div class="form-group">
                            <label class="d-block">Rodzaj:</label>
                            <InputSelect @bind-Value="CompanyData.type">
                                <ValidationMessage For="()=>CompanyData.type"></ValidationMessage>
                                <option>rodzaje..</option>
                                <option value="Inforamtyka">Informatka</option>
                                <option value="Chemia">Chemia</option>
                                <option value="Budownictwo">Budownictwo</option>
                                <option value="Elektronika">Elektronika</option>
                                <option value="Architektura">Architektura</option>
                                <option value="Administracja">Administracja</option>
                                <option value="Warsztat">Warsztat</option>
                                <option value="Szkoła">Szkoła</option>
                                <option value="Uczelnia">Uczelnia</option>
                                <option value="Kosmetologia">Kosmetologia</option>
                                <option value="Turystyka">Turystyka</option>
                                <option value="Gastronomia">Gastronomia</option>
                                <option value="Medycyna">Medycyna</option>
                                <option value="Prawo">Prawo</option>
                                <option value="Zarządzanie">Zarządzanie</option>
                            </InputSelect>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Ulica:</label>
                            <InputText placeholder="Ul.Pocieszna" @bind-Value="CompanyData.street" />
                            <ValidationMessage For="()=>CompanyData.street"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Numer ulicy:</label>
                            <InputText placeholder="12" @bind-Value="CompanyData.streetNumber" />
                            <ValidationMessage For="()=>CompanyData.streetNumber"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Miasto:</label>
                            <InputText placeholder="Bydgoszcz" @bind-Value="CompanyData.city" />
                            <ValidationMessage For="()=>CompanyData.city"></ValidationMessage>
                        </div>
                        <div class="form-group">
                            <label class="d-block">Kod pocztowy:</label>
                            <InputText placeholder="85-024" @bind-Value="CompanyData.postCode" />
                            <ValidationMessage For="()=>CompanyData.postCode"></ValidationMessage>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="d-flex flex-row-reverse button">
            <button type="submit" class="btn-submit btn m-1">Aktualizuj</button>
            <a href="/keeper/profile" class="btn btn-dark m-1">Wyjdź</a>
        </div>
    </EditForm>
</div>



@code {
    [Parameter]
    public int? companyId { get; set; }

    private CompanyDTO CompanyData { get; set; } = new CompanyDTO();

    protected override async Task OnInitializedAsync()
    {
        if (await localStorage.GetItemAsync<CompanyDTO>(AuthenticationData.UserData) != null)
        {
            var data = await localStorage.GetItemAsync<CompanyDTO> (AuthenticationData.UserData);
            companyId = data.CompanyId;
        }
        CompanyData = await companyInterface.GetCompany(companyId.Value);
    }

    private async Task EditStudent()
    {
        try
        {
            await Runtime.InvokeVoidAsync("ToastShow", "success", "Zaktualizowano pomyślnie!");
            await companyInterface.UpdateCompany(CompanyData.CompanyId, CompanyData);
        }
        catch (Exception error)
        {
            await Runtime.InvokeVoidAsync("ToastShow", "error", error.Message);
        }
        navigationManager.NavigateTo("/company/profile");
    }

    private async Task AssignImageUrl(string imgUrl)
    {
        var companyData = await companyImageInterface.GetCompanyImages(companyId.Value);

        if (companyData != null)
        {
            string name = Path.GetFileName(new Uri(companyData.URL).AbsolutePath);
            await uploadInterface.DeleteImage(name);
            await companyImageInterface.DeleteCompanyImageByCompanyId(companyData.CompanyId);

            await Runtime.InvokeVoidAsync("ToastShow", "success", "Avatar został dodany pomyślnie.");
            navigationManager.NavigateTo("/company/profile",true);

            var data = new CompanyImageDTO
            {
                CompanyId = companyId.Value,
                URL = imgUrl
            };

            if (data != null)
            {
                await companyImageInterface.CreateCompanyImage(data);
            }
            await Runtime.InvokeVoidAsync("ToastShow", "success", "Zdjęcie firmy zostało dodane pomyślnie.");
            navigationManager.NavigateTo("/company/profile", true);
        }
        else
        {
            var data = new CompanyImageDTO
            {
                CompanyId = companyId.Value,
                URL = imgUrl
            };

            if (data != null)
            {
                await companyImageInterface.CreateCompanyImage(data);
            }
            await Runtime.InvokeVoidAsync("ToastShow", "success", "Zdjęcie firmy zostało dodane pomyślnie.");
            navigationManager.NavigateTo("/company/profile", true);
        }
    }
}
